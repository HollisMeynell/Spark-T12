C51 COMPILER V9.60.0.0   CH224D                                                            12/29/2022 16:59:28 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE CH224D
OBJECT MODULE PLACED IN .\list\Ch224d.obj
COMPILER INVOKED BY: C:\keil\Keil C51\C51\BIN\C51.EXE SRC\Ch224d.c LARGE OPTIMIZE(8,SPEED) BROWSE INCDIR(.\SRC) DEBUG OB
                    -JECTEXTEND PRINT(.\list\Ch224d.lst) TABS(2) OBJECT(.\list\Ch224d.obj)

line level    source

   1          #include "Ch224d.h"
   2          
   3          u16 power_addrs = 0x0000;
   4          /* 0x0040 eeprom 为电压选择记录地址*/
   5          /***********************************************************
   6          *@fuction :power
   7          *@brief   :控制供电电压
   8          *@param   :5/9/12/15/20
   9          *@return  :void
  10          *@author  :--xptx
  11          *@date    :2022-10-02
  12          ***********************************************************/
  13          void power_Init(void)
  14          {
  15   1          u8 i;
  16   1      
  17   1          i = (u8)read_rom(power_addrs); //读取数据
  18   1      
  19   1          if(i == 5 || i == 9 || i == 12 || i == 15 || i == 20) //数据校验
  20   1              power(i);
  21   1          else
  22   1          {
  23   2              write_rom(power_addrs, (u16)5); //写入
  24   2              i = (u8)read_rom(power_addrs); //读取数据
  25   2              power(i);
  26   2          }
  27   1      }
  28          
  29          /***********************************************************
  30          *@fuction :power_record
  31          *@brief   :  更新记忆供电电压
  32          *@param   :--
  33          *@return  :void
  34          *@author  :--xptx
  35          *@date    :2022-11-13
  36          ***********************************************************/
  37          
  38          void power_record(void)
  39          {
  40   1          u8 i;  //临时变量
  41   1      
  42   1          i = (u8)read_rom(power_addrs); //读取数据//读取记录数据
  43   1          if( (v_data_out() != i) && (v_data_out() != 0))    //对比,io设置电压值与存入电压值不相等且io设置电压值
             -不等于0
  44   1              write_rom(power_addrs, (u16)v_data_out()); //写入io设置电压值
  45   1          //重新记忆
  46   1      }
  47          
  48          void power(u8 x)
  49          {
  50   1          if(x == 5)
  51   1          {
  52   2              CFG1 = 1;
  53   2              CFG2 = CFG3 = 0;
C51 COMPILER V9.60.0.0   CH224D                                                            12/29/2022 16:59:28 PAGE 2   

  54   2          }
  55   1          else if(x == 9)
  56   1          {
  57   2              CFG1 = CFG2 = CFG3 = 0;
  58   2          }
  59   1          else if(x == 12)
  60   1          {
  61   2              CFG1 = CFG2 = 0;
  62   2              CFG3 = 1;
  63   2          }
  64   1          else if(x == 15)
  65   1          {
  66   2              CFG1 = 0;
  67   2              CFG2 = CFG3 = 1;
  68   2          }
  69   1          else if(x == 20)
  70   1          {
  71   2              CFG1 = 0;
  72   2              CFG2 = 1;
  73   2              CFG3 = 0;
  74   2          }
  75   1      }
  76          
  77          /***********************************************************
  78          *@fuction :v_data_out
  79          *@brief   :根据GPIO状态返回当前电压数据
  80          *@param   :--void
  81          *@return  :Current supply voltage
  82          *@author  :--xptx
  83          *@date    :2022-11-20
  84          ***********************************************************/
  85          
  86          u8 v_data_out(void)
  87          {
  88   1          u8 i;
  89   1          if( CFG1 == 0 && CFG2 == 1 && CFG3 == 0)  i = 20;
  90   1          else if( CFG1 == 0 && CFG2 == 1 && CFG3 == 1)  i = 15;
  91   1          else if( CFG1 == 0 && CFG2 == 0 && CFG3 == 1)  i = 12;
  92   1          else if( CFG1 == 0 && CFG2 == 0 && CFG3 == 0)  i = 9;
  93   1          else if( CFG1 == 1 && CFG2 == 0 && CFG3 == 0)  i = 5;
  94   1          else
  95   1              i = 0;
  96   1          return i;
  97   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    263    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =      2       2
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
